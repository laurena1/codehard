{"changed":true,"filter":false,"title":"faculty.js","tooltip":"/faculty.js","value":"var mongoose = require('mongoose');\nvar connString = \"mongodb://\" + process.env.IP + \":27017/\";\nvar dbName = \"studentsdb\";\n\n\nvar db = mongoose.connect(connString + dbName);\n\n\nvar facultySchema = require('./student_schema.js').studentSchema;\n\nvar Students = mongoose.model('students', studentSchema);\n\nmongoose.connection.once('open', function() {\n    \n    \n     var student1 = {\n        \"first\": 'Lauren',\n        \"last\": 'Alvarez',\n        \"major\": 'CIS',\n        \"phone\": 8066564564,\n        \"id\": '01',\n        \"currentCity\": 'Canyon',\n        \"currentState\": 'TX',\n        \"gpa\": '3.5',\n        \"gradYear\": '2015'\n        \n    };\n    \n     var student2 = {\n        \"first\": 'Jordan',\n        \"last\": 'Brittenham',\n        \"major\": 'CIS',\n         \"phone\": 9066564564,\n        \"id\": '02',\n        \"currentCity\": 'Canyon',\n        \"currentState\": 'TX',\n        \"gpa\": '3.1',\n        \"gradYear\": '2015'\n      \n\t\t\n    };\n     var student3 = {\n        \"first\": 'Derrick',\n        \"last\": 'Burns',\n        \"major\": 'CIS',\n         \"phone\": 5176564564,\n        \"id\": '03',\n        \"currentCity\": 'Canyon',\n        \"currentState\": 'TX',\n        \"gpa\": '3.2',\n        \"gradYear\": '2019'\n\t\t\n    };\n     var student4 = {\n        \"first\": 'Secia',\n        \"last\": 'Chase',\n        \"major\": 'CIS',\n         \"phone\": 8066564564,\n        \"id\": '04',\n        \"currentCity\": 'Canyon',\n        \"currentState\": 'TX',\n        \"gpa\": '3.4',\n        \"gradYear\": '2014'\n\t\t\n    };\n    \n     var student5 = {\n        \"first\": 'Brett',\n        \"last\": 'Dunlap',\n        \"major\": 'CIS',\n         \"phone\": 8066564564,\n        \"id\": '05',\n        \"currentCity\": 'Canyon',\n        \"currentState\": 'TX',\n        \"gpa\": '3.4',\n        \"gradYear\": '2017'\n        \n    };\n\n    //we write both of these objects - which must be properly structured - using\n    //the create method.  The callback allows us to catch the error OR\n    //work with or even find, the new objects.\n    Students.create([student1, student2, student3, student4, student5], function(err) {\n        for (var i = 1; i < arguments.length; i++) {\n            console.log(\"\\nCreated document: \" + arguments[i].first + arguments[i].last);\n        }\n        //close up shop\n        mongoose.disconnect();\n    });\n});","undoManager":{"mark":-1,"position":14,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":35}},"text":"var mongoose = require('mongoose');"},{"action":"insertText","range":{"start":{"row":0,"column":35},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":89,"column":0}},"lines":["var connString = \"mongodb://\" + process.env.IP + \":27017/\";","var dbName = \"studentsdb\";","","","var db = mongoose.connect(connString + dbName);","","","var studentSchema = require('./student_schema.js').studentSchema;","","var Students = mongoose.model('students', studentSchema);","","mongoose.connection.once('open', function() {","    ","    ","     var student1 = {","        \"first\": 'Lauren',","        \"last\": 'Alvarez',","        \"major\": 'CIS',","        \"phone\": 8066564564,","        \"id\": '01',","        \"currentCity\": 'Canyon',","        \"currentState\": 'TX',","        \"gpa\": '3.5',","        \"gradYear\": '2015'","        ","    };","    ","     var student2 = {","        \"first\": 'Jordan',","        \"last\": 'Brittenham',","        \"major\": 'CIS',","         \"phone\": 9066564564,","        \"id\": '02',","        \"currentCity\": 'Canyon',","        \"currentState\": 'TX',","        \"gpa\": '3.1',","        \"gradYear\": '2015'","      ","\t\t","    };","     var student3 = {","        \"first\": 'Derrick',","        \"last\": 'Burns',","        \"major\": 'CIS',","         \"phone\": 5176564564,","        \"id\": '03',","        \"currentCity\": 'Canyon',","        \"currentState\": 'TX',","        \"gpa\": '3.2',","        \"gradYear\": '2019'","\t\t","    };","     var student4 = {","        \"first\": 'Secia',","        \"last\": 'Chase',","        \"major\": 'CIS',","         \"phone\": 8066564564,","        \"id\": '04',","        \"currentCity\": 'Canyon',","        \"currentState\": 'TX',","        \"gpa\": '3.4',","        \"gradYear\": '2014'","\t\t","    };","    ","     var student5 = {","        \"first\": 'Brett',","        \"last\": 'Dunlap',","        \"major\": 'CIS',","         \"phone\": 8066564564,","        \"id\": '05',","        \"currentCity\": 'Canyon',","        \"currentState\": 'TX',","        \"gpa\": '3.4',","        \"gradYear\": '2017'","        ","    };","","    //we write both of these objects - which must be properly structured - using","    //the create method.  The callback allows us to catch the error OR","    //work with or even find, the new objects.","    Students.create([student1, student2, student3, student4, student5], function(err) {","        for (var i = 1; i < arguments.length; i++) {","            console.log(\"\\nCreated document: \" + arguments[i].first + arguments[i].last);","        }","        //close up shop","        mongoose.disconnect();","    });"]},{"action":"insertText","range":{"start":{"row":89,"column":0},"end":{"row":89,"column":3}},"text":"});"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":10},"end":{"row":8,"column":11}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":9},"end":{"row":8,"column":10}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":8},"end":{"row":8,"column":9}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":7},"end":{"row":8,"column":8}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":6},"end":{"row":8,"column":7}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":5},"end":{"row":8,"column":6}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":8,"column":4},"end":{"row":8,"column":5}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":4},"end":{"row":8,"column":5}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":5},"end":{"row":8,"column":6}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":6},"end":{"row":8,"column":7}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":7},"end":{"row":8,"column":8}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":8},"end":{"row":8,"column":9}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":9},"end":{"row":8,"column":10}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":8,"column":10},"end":{"row":8,"column":11}},"text":"y"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":22},"end":{"row":2,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1415227834145}